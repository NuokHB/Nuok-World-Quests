<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<HBProfile>
  <Name>[Nuok] Gettin' Tuffer</Name>
  <MinDurability>0.2</MinDurability>
  <MinFreeBagSlots>1</MinFreeBagSlots>
  <MinLevel>1</MinLevel>
  <MaxLevel>1000</MaxLevel>
  <MailGrey>false</MailGrey>
  <MailWhite>true</MailWhite>
  <MailGreen>true</MailGreen>
  <MailBlue>true</MailBlue>
  <MailPurple>true</MailPurple>
  <SellGrey>true</SellGrey>
  <SellWhite>false</SellWhite>
  <SellGreen>false</SellGreen>
  <SellBlue>false</SellBlue>
  <SellPurple>false</SellPurple>
  <TargetElites>true</TargetElites>
  <QuestOrder>
    <CustomBehavior File="RunCode" Type="Definition"><![CDATA[public bool OnQuest => Lua.GetReturnVal<bool>(@"SetMapByID(1024);
local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID(1024)
if (taskInfo) then
    for i, info  in ipairs(taskInfo) do
        if info.questId == 41701 then
            return true;
            end
    end
end
return false;", 0);]]></CustomBehavior>
    <!--Credit To Echo-->
    <CustomBehavior File="RunCode" Type="Definition">
      <![CDATA[
					async Task VehicleMove(Vector3 moveTo)
					{
						while (Me.Location.Distance(moveTo) >= 5)
						{
							Navigator.MoveTo(moveTo);
							await CombatAwareness();
							await Coroutine.Yield();
						}
					}
          
        async Task DoQuest()
        {
            var slimeweed =
                ObjectManager.GetObjectsOfType<WoWUnit>()
                    .OrderBy(u => u.Distance)
                    .FirstOrDefault(u => u.IsValid && u.Entry == 104599);
                    
            while (!IsObjectiveComplete(2, 41701) && Me.HasAura(206919))
            {
                if(slimeweed != null)
                    {
                    await VehicleMove(slimeweed.Location);
                    await Coroutine.Sleep(500);
                    }
                else
                {
                    await VehicleMove(new Vector3(6452.522f, 3998.894f, -0.4297736f));
                    await Coroutine.Sleep(500);
                }
            }
        }

					async Task VehicleKill(uint unitId)
					{
						WoWUnit killMe = ObjectManager.GetObjectsOfType<WoWUnit>()
                    .Where(u => u.IsValid && u.Entry == unitId && u.IsAlive)
                    .OrderBy(u => u.Distance)
                    .FirstOrDefault();
                    
						if (killMe == null) return;

							if (Me.Location.Distance(killMe.Location) <= 5)
							{
								await VehicleCombat(killMe);
								await Coroutine.Yield();
                return;
							}
              
								Navigator.MoveTo(killMe.Location);
								await CombatAwareness();
								await Coroutine.Yield();
                return;
					}

					async Task VehicleCombat(WoWUnit vehicleKill)
					{
						if (vehicleKill.Distance > 5) return;
						if (Me.CurrentTarget != vehicleKill)
						{
							vehicleKill.Target();
						}
						Me.SetFacing(vehicleKill.Location);
						if (Me.ZoneId == 7503)
						{
							Styx.Helpers.KeyboardManager.KeyUpDown((char)System.Windows.Forms.Keys.D2); // For murloc quest mostly.
							SpellManager.ClickRemoteLocation(vehicleKill.Location);
						}
						Styx.Helpers.KeyboardManager.KeyUpDown((char)System.Windows.Forms.Keys.D1);
						await Coroutine.Sleep(1050);
					}

					async Task CombatAwareness()
					{
						var killArray = ObjectManager.GetObjectsOfType<WoWUnit>().Where(u => u.IsTargetingMeOrPet && u.Distance <= 5);
						if (killArray == null) return;

						foreach (WoWUnit killMe in killArray)
						{
							while (killMe != null && killMe.IsTargetingMeOrPet && killMe.Distance <= 5)
							{
								await CommonCoroutines.StopMoving();
								StyxWoW.Me.SetFacing(killMe.Location);
								await VehicleCombat(killMe);
                await Coroutine.Sleep(500);
								await Coroutine.Yield();
							}
						}
					}
				]]>
    </CustomBehavior>
    <While Condition="OnQuest">
      <If Condition="!HasQuest(41701)">
        <RunTo X="6478.535" Y="4152.712" Z="3.890095" />
      </If>
      <If Condition="Me.HasAura(206919)">
        <!--<Aura Name="Murky" SpellId="206919" StackCount="0" TimeLeft="00:00:00" Flags="Passive, Cancelable" />-->
        <DisableBehavior Name="All" />
        <While Condition="!IsObjectiveComplete(2, 41701)">
          <CustomBehavior File="RunCode" Code="await DoQuest();"/>
        </While>
        <While Condition="!IsObjectiveComplete(1, 41701)">
          <CustomBehavior File="RunCode" Code="await VehicleKill(104598);"/>
        </While>
        <While Condition="!IsObjectiveComplete(3, 41701)">
          <CustomBehavior File="RunCode" Code="await VehicleKill(104597);"/>
          <CustomBehavior File="RunCode" Code="await VehicleMove(new Vector3(6293.563f, 3952.585f, 6.251153f));"/>
        </While>
      </If>
      <EnableBehavior Name="All" />
    </While>
    <CustomBehavior File="LoadProfile" ProfileName="[Nuok] Autoloader" RememberProfile="false" />
  </QuestOrder>
</HBProfile>